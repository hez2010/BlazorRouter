@inherits LayoutComponentBase
@using BlazorRouter.Sample.Pages

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4">
            <a href="http://blazor.net" target="_blank" class="ml-md-auto">About</a>
        </div>

        <div class="content px-4">
            <Switch>
                <Route Template="/">
                    <Home CountValue="@countValue"></Home>
                </Route>
                <Route Template="/counter">
                    <Counter @bind-CurrentCount="countValue" ChangeCount="@ChangeCountValue"></Counter>
                </Route>
                <Route Template="/counter/{init:int}">
                    <Counter @bind-CurrentCount="countValue" ChangeCount="@ChangeCountValue"></Counter>
                </Route>
                <Route Template="/fetchdata">
                    <FetchData />
                </Route>
                <Route Template="/*/test">
                    <p>Test page</p>
                </Route>
                <Route Template="/nested-route/{id:int}/*">
                    <Switch>
                        <Route Template="/nested-route/{id:int}">
                            <FetchData Value="1" />
                        </Route>
                        <Route Template="/nested-route/{id:int}/hello">
                            <FetchData Value="2" />
                        </Route>
                        <Route Template="/nested-route/{id:int}/world">
                            <FetchData Value="3" />
                        </Route>
                        <Route>
                            <h1 class="text-danger">Error</h1>
                            <p>Nested: Sorry, there's nothing at this address.</p>
                        </Route>
                    </Switch>
                </Route>
                <Route>
                    <h1 class="text-danger">Error</h1>
                    <p>Sorry, there's nothing at this address.</p>
                </Route>
            </Switch>
        </div>
    </div>
</div>


@code {
    private int countValue { get; set; } = 0;

    void ChangeCountValue(int value)
    {
        countValue = value;
        this.StateHasChanged();
    }
}